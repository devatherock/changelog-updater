plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'io.micronaut.application' version '2.0.3'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id 'com.diffplug.spotless' version '5.14.3'
    id 'org.owasp.dependencycheck' version '7.1.0.1'
}

version = "0.2.0"
group = "io.github.devatherock"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("io.github.devatherock.*")
    }
}

configurations.all*.exclude module: 'micronaut-inject-groovy'

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly("org.graalvm.nativeimage:svm")
    compileOnly("org.projectlombok:lombok")
    compileOnly group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

    implementation "io.micronaut:micronaut-inject"
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")

    implementation("info.picocli:picocli")
    implementation("io.micronaut.picocli:micronaut-picocli:4.0.0")
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    runtimeOnly("ch.qos.logback:logback-classic")

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-spock"

    testImplementation group: 'org.codehaus.groovy', name: 'groovy-json', version: '3.0.9'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-3.0'
    testImplementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    testImplementation group: 'org.objenesis', name: 'objenesis', version: '3.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
}

application {
    mainClass.set("io.github.devatherock.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}

run {
    systemProperties(System.properties)

    if(System.getProperty('run_args')) {
        List runArgs = System.getProperty('run_args').split("\\s") as List
        args += runArgs
    }
}

ext.jacoco = [
    exclusions: [
        // TODO Remove once tests are written
        'io/github/devatherock/changelog/entities/PullRequest.class',
        'io/github/devatherock/changelog/entities/GithubRelease.class',
        'io/github/devatherock/changelog/entities/PullRequestFile.class',
        'io/github/devatherock/changelog/service/ChangelogUpdater.class',
        'io/github/devatherock/changelog/service/GithubService.class',
        'io/github/devatherock/Application.class'
    ],
    coverageThresholds: [
        'io.github.devatherock.changelog.util.ProcessUtil': [
            'INSTRUCTION': 0.86,
            'LINE': 0.81
        ],
        'io.github.devatherock.changelog.service.ChangelogUpdaterHelper': [
            'COMPLEXITY': 0.93,
            'INSTRUCTION': 0.97,
            'LINE': 0.92
        ]
    ]
]

apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/checks.gradle'